"use strict";(self.webpackChunkdesmos_docs=self.webpackChunkdesmos_docs||[]).push([[15266],{3905:(e,o,t)=>{t.d(o,{Zo:()=>s,kt:()=>m});var n=t(67294);function r(e,o,t){return o in e?Object.defineProperty(e,o,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[o]=t,e}function a(e,o){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);o&&(n=n.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var o=1;o<arguments.length;o++){var t=null!=arguments[o]?arguments[o]:{};o%2?a(Object(t),!0).forEach((function(o){r(e,o,t[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(t,o))}))}return e}function p(e,o){if(null==e)return{};var t,n,r=function(e,o){if(null==e)return{};var t,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],o.indexOf(t)>=0||(r[t]=e[t]);return r}(e,o);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],o.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=n.createContext({}),_=function(e){var o=n.useContext(l),t=o;return e&&(t="function"==typeof e?e(o):i(i({},o),e)),t},s=function(e){var o=_(e.components);return n.createElement(l.Provider,{value:o},e.children)},c={inlineCode:"code",wrapper:function(e){var o=e.children;return n.createElement(n.Fragment,{},o)}},d=n.forwardRef((function(e,o){var t=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),d=_(t),m=r,f=d["".concat(l,".").concat(m)]||d[m]||c[m]||a;return t?n.createElement(f,i(i({ref:o},s),{},{components:t})):n.createElement(f,i({ref:o},s))}));function m(e,o){var t=arguments,r=o&&o.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=d;var p={};for(var l in o)hasOwnProperty.call(o,l)&&(p[l]=o[l]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var _=2;_<a;_++)i[_]=t[_];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},44907:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>p,toc:()=>_});var n=t(87462),r=(t(67294),t(3905));const a={id:"profile-bool-exp",title:"profile_bool_exp",hide_table_of_contents:!1},i=void 0,p={unversionedId:"graphql/inputs/profile-bool-exp",id:"graphql/inputs/profile-bool-exp",title:"profile_bool_exp",description:"Boolean expression to filter rows from the table \"profile\". All fields are combined with a logical 'AND'.",source:"@site/docs/07-graphql/inputs/profile-bool-exp.mdx",sourceDirName:"07-graphql/inputs",slug:"/graphql/inputs/profile-bool-exp",permalink:"/next/graphql/inputs/profile-bool-exp",draft:!1,editUrl:"https://github.com/desmos-labs/docs/master/docs/07-graphql/inputs/profile-bool-exp.mdx",tags:[],version:"current",lastUpdatedAt:1662474845,formattedLastUpdatedAt:"Sep 6, 2022",frontMatter:{id:"profile-bool-exp",title:"profile_bool_exp",hide_table_of_contents:!1},sidebar:"docs",previous:{title:"posts_params_set_input",permalink:"/next/graphql/inputs/posts-params-set-input"},next:{title:"profile_inc_input",permalink:"/next/graphql/inputs/profile-inc-input"}},l={},_=[{value:"Fields",id:"fields",level:3},{value:"<code>_and</code> (<code>[profile_bool_exp!]</code>)",id:"_and-profile_bool_exp",level:4},{value:"<code>_not</code> (<code>profile_bool_exp</code>)",id:"_not-profile_bool_exp",level:4},{value:"<code>_or</code> (<code>[profile_bool_exp!]</code>)",id:"_or-profile_bool_exp",level:4},{value:"<code>address</code> (<code>String_comparison_exp</code>)",id:"address-string_comparison_exp",level:4},{value:"<code>application_links</code> (<code>application_link_bool_exp</code>)",id:"application_links-application_link_bool_exp",level:4},{value:"<code>bio</code> (<code>String_comparison_exp</code>)",id:"bio-string_comparison_exp",level:4},{value:"<code>blocked_users</code> (<code>user_block_bool_exp</code>)",id:"blocked_users-user_block_bool_exp",level:4},{value:"<code>chain_links</code> (<code>chain_link_bool_exp</code>)",id:"chain_links-chain_link_bool_exp",level:4},{value:"<code>cover_pic</code> (<code>String_comparison_exp</code>)",id:"cover_pic-string_comparison_exp",level:4},{value:"<code>creation_time</code> (<code>timestamp_comparison_exp</code>)",id:"creation_time-timestamp_comparison_exp",level:4},{value:"<code>dtag</code> (<code>String_comparison_exp</code>)",id:"dtag-string_comparison_exp",level:4},{value:"<code>followage</code> (<code>user_relationship_bool_exp</code>)",id:"followage-user_relationship_bool_exp",level:4},{value:"<code>following</code> (<code>user_relationship_bool_exp</code>)",id:"following-user_relationship_bool_exp",level:4},{value:"<code>height</code> (<code>bigint_comparison_exp</code>)",id:"height-bigint_comparison_exp",level:4},{value:"<code>incoming_dtag_transfer_requests</code> (<code>dtag_transfer_requests_bool_exp</code>)",id:"incoming_dtag_transfer_requests-dtag_transfer_requests_bool_exp",level:4},{value:"<code>nickname</code> (<code>String_comparison_exp</code>)",id:"nickname-string_comparison_exp",level:4},{value:"<code>outgoing_dtag_transfer_requests</code> (<code>dtag_transfer_requests_bool_exp</code>)",id:"outgoing_dtag_transfer_requests-dtag_transfer_requests_bool_exp",level:4},{value:"<code>profile_pic</code> (<code>String_comparison_exp</code>)",id:"profile_pic-string_comparison_exp",level:4}],s={toc:_};function c(e){let{components:o,...t}=e;return(0,r.kt)("wrapper",(0,n.Z)({},s,t,{components:o,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Boolean expression to filter rows from the table \"profile\". All fields are combined with a logical 'AND'."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},"input profile_bool_exp {\n  _and: [profile_bool_exp!]\n  _not: profile_bool_exp\n  _or: [profile_bool_exp!]\n  address: String_comparison_exp\n  application_links: application_link_bool_exp\n  bio: String_comparison_exp\n  blocked_users: user_block_bool_exp\n  chain_links: chain_link_bool_exp\n  cover_pic: String_comparison_exp\n  creation_time: timestamp_comparison_exp\n  dtag: String_comparison_exp\n  followage: user_relationship_bool_exp\n  following: user_relationship_bool_exp\n  height: bigint_comparison_exp\n  incoming_dtag_transfer_requests: dtag_transfer_requests_bool_exp\n  nickname: String_comparison_exp\n  outgoing_dtag_transfer_requests: dtag_transfer_requests_bool_exp\n  profile_pic: String_comparison_exp\n}\n")),(0,r.kt)("h3",{id:"fields"},"Fields"),(0,r.kt)("h4",{id:"_and-profile_bool_exp"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("inlineCode",{parentName:"a"},"_and"))," (",(0,r.kt)("a",{parentName:"h4",href:"../inputs/profile-bool-exp"},(0,r.kt)("inlineCode",{parentName:"a"},"[profile_bool_exp!]")),")"),(0,r.kt)("h4",{id:"_not-profile_bool_exp"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("inlineCode",{parentName:"a"},"_not"))," (",(0,r.kt)("a",{parentName:"h4",href:"../inputs/profile-bool-exp"},(0,r.kt)("inlineCode",{parentName:"a"},"profile_bool_exp")),")"),(0,r.kt)("h4",{id:"_or-profile_bool_exp"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("inlineCode",{parentName:"a"},"_or"))," (",(0,r.kt)("a",{parentName:"h4",href:"../inputs/profile-bool-exp"},(0,r.kt)("inlineCode",{parentName:"a"},"[profile_bool_exp!]")),")"),(0,r.kt)("h4",{id:"address-string_comparison_exp"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("inlineCode",{parentName:"a"},"address"))," (",(0,r.kt)("a",{parentName:"h4",href:"../inputs/string-comparison-exp"},(0,r.kt)("inlineCode",{parentName:"a"},"String_comparison_exp")),")"),(0,r.kt)("h4",{id:"application_links-application_link_bool_exp"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("inlineCode",{parentName:"a"},"application_links"))," (",(0,r.kt)("a",{parentName:"h4",href:"../inputs/application-link-bool-exp"},(0,r.kt)("inlineCode",{parentName:"a"},"application_link_bool_exp")),")"),(0,r.kt)("h4",{id:"bio-string_comparison_exp"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("inlineCode",{parentName:"a"},"bio"))," (",(0,r.kt)("a",{parentName:"h4",href:"../inputs/string-comparison-exp"},(0,r.kt)("inlineCode",{parentName:"a"},"String_comparison_exp")),")"),(0,r.kt)("h4",{id:"blocked_users-user_block_bool_exp"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("inlineCode",{parentName:"a"},"blocked_users"))," (",(0,r.kt)("a",{parentName:"h4",href:"../inputs/user-block-bool-exp"},(0,r.kt)("inlineCode",{parentName:"a"},"user_block_bool_exp")),")"),(0,r.kt)("h4",{id:"chain_links-chain_link_bool_exp"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("inlineCode",{parentName:"a"},"chain_links"))," (",(0,r.kt)("a",{parentName:"h4",href:"../inputs/chain-link-bool-exp"},(0,r.kt)("inlineCode",{parentName:"a"},"chain_link_bool_exp")),")"),(0,r.kt)("h4",{id:"cover_pic-string_comparison_exp"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("inlineCode",{parentName:"a"},"cover_pic"))," (",(0,r.kt)("a",{parentName:"h4",href:"../inputs/string-comparison-exp"},(0,r.kt)("inlineCode",{parentName:"a"},"String_comparison_exp")),")"),(0,r.kt)("h4",{id:"creation_time-timestamp_comparison_exp"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("inlineCode",{parentName:"a"},"creation_time"))," (",(0,r.kt)("a",{parentName:"h4",href:"../inputs/timestamp-comparison-exp"},(0,r.kt)("inlineCode",{parentName:"a"},"timestamp_comparison_exp")),")"),(0,r.kt)("h4",{id:"dtag-string_comparison_exp"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("inlineCode",{parentName:"a"},"dtag"))," (",(0,r.kt)("a",{parentName:"h4",href:"../inputs/string-comparison-exp"},(0,r.kt)("inlineCode",{parentName:"a"},"String_comparison_exp")),")"),(0,r.kt)("h4",{id:"followage-user_relationship_bool_exp"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("inlineCode",{parentName:"a"},"followage"))," (",(0,r.kt)("a",{parentName:"h4",href:"../inputs/user-relationship-bool-exp"},(0,r.kt)("inlineCode",{parentName:"a"},"user_relationship_bool_exp")),")"),(0,r.kt)("h4",{id:"following-user_relationship_bool_exp"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("inlineCode",{parentName:"a"},"following"))," (",(0,r.kt)("a",{parentName:"h4",href:"../inputs/user-relationship-bool-exp"},(0,r.kt)("inlineCode",{parentName:"a"},"user_relationship_bool_exp")),")"),(0,r.kt)("h4",{id:"height-bigint_comparison_exp"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("inlineCode",{parentName:"a"},"height"))," (",(0,r.kt)("a",{parentName:"h4",href:"../inputs/bigint-comparison-exp"},(0,r.kt)("inlineCode",{parentName:"a"},"bigint_comparison_exp")),")"),(0,r.kt)("h4",{id:"incoming_dtag_transfer_requests-dtag_transfer_requests_bool_exp"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("inlineCode",{parentName:"a"},"incoming_dtag_transfer_requests"))," (",(0,r.kt)("a",{parentName:"h4",href:"../inputs/dtag-transfer-requests-bool-exp"},(0,r.kt)("inlineCode",{parentName:"a"},"dtag_transfer_requests_bool_exp")),")"),(0,r.kt)("h4",{id:"nickname-string_comparison_exp"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("inlineCode",{parentName:"a"},"nickname"))," (",(0,r.kt)("a",{parentName:"h4",href:"../inputs/string-comparison-exp"},(0,r.kt)("inlineCode",{parentName:"a"},"String_comparison_exp")),")"),(0,r.kt)("h4",{id:"outgoing_dtag_transfer_requests-dtag_transfer_requests_bool_exp"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("inlineCode",{parentName:"a"},"outgoing_dtag_transfer_requests"))," (",(0,r.kt)("a",{parentName:"h4",href:"../inputs/dtag-transfer-requests-bool-exp"},(0,r.kt)("inlineCode",{parentName:"a"},"dtag_transfer_requests_bool_exp")),")"),(0,r.kt)("h4",{id:"profile_pic-string_comparison_exp"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("inlineCode",{parentName:"a"},"profile_pic"))," (",(0,r.kt)("a",{parentName:"h4",href:"../inputs/string-comparison-exp"},(0,r.kt)("inlineCode",{parentName:"a"},"String_comparison_exp")),")"))}c.isMDXComponent=!0}}]);