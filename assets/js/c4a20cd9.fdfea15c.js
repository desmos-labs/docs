"use strict";(self.webpackChunkdesmos_docs=self.webpackChunkdesmos_docs||[]).push([[40508],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>h});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),l=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(r),h=a,_=d["".concat(p,".").concat(h)]||d[h]||c[h]||i;return r?n.createElement(_,o(o({ref:t},u),{},{components:r})):n.createElement(_,o({ref:t},u))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=r[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},75986:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var n=r(87462),a=(r(67294),r(3905));const i={id:"update-user-relationship",title:"update_user_relationship",hide_table_of_contents:!1},o=void 0,s={unversionedId:"graphql/mutations/update-user-relationship",id:"graphql/mutations/update-user-relationship",title:"update_user_relationship",description:'update data of the table: "user_relationship"',source:"@site/docs/07-graphql/mutations/update-user-relationship.mdx",sourceDirName:"07-graphql/mutations",slug:"/graphql/mutations/update-user-relationship",permalink:"/next/graphql/mutations/update-user-relationship",draft:!1,editUrl:"https://github.com/desmos-labs/docs/master/docs/07-graphql/mutations/update-user-relationship.mdx",tags:[],version:"current",lastUpdatedAt:1662484466,formattedLastUpdatedAt:"Sep 6, 2022",frontMatter:{id:"update-user-relationship",title:"update_user_relationship",hide_table_of_contents:!1},sidebar:"docs",previous:{title:"update_user_block",permalink:"/next/graphql/mutations/update-user-block"}},p={},l=[{value:"Arguments",id:"arguments",level:3},{value:"<code>_inc</code> (<code>user_relationship_inc_input</code>)",id:"_inc-user_relationship_inc_input",level:4},{value:"<code>_set</code> (<code>user_relationship_set_input</code>)",id:"_set-user_relationship_set_input",level:4},{value:"<code>where</code> (<code>user_relationship_bool_exp!</code>)",id:"where-user_relationship_bool_exp",level:4},{value:"Type",id:"type",level:3},{value:"<code>user_relationship_mutation_response</code>",id:"user_relationship_mutation_response",level:4}],u={toc:l};function c(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,'update data of the table: "user_relationship"'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-graphql"},"update_user_relationship(\n  _inc: user_relationship_inc_input\n  _set: user_relationship_set_input\n  where: user_relationship_bool_exp!\n): user_relationship_mutation_response\n")),(0,a.kt)("h3",{id:"arguments"},"Arguments"),(0,a.kt)("h4",{id:"_inc-user_relationship_inc_input"},(0,a.kt)("a",{parentName:"h4",href:"#"},(0,a.kt)("inlineCode",{parentName:"a"},"_inc"))," (",(0,a.kt)("a",{parentName:"h4",href:"../inputs/user-relationship-inc-input"},(0,a.kt)("inlineCode",{parentName:"a"},"user_relationship_inc_input")),")"),(0,a.kt)("p",null,"increments the numeric columns with given value of the filtered values"),(0,a.kt)("h4",{id:"_set-user_relationship_set_input"},(0,a.kt)("a",{parentName:"h4",href:"#"},(0,a.kt)("inlineCode",{parentName:"a"},"_set"))," (",(0,a.kt)("a",{parentName:"h4",href:"../inputs/user-relationship-set-input"},(0,a.kt)("inlineCode",{parentName:"a"},"user_relationship_set_input")),")"),(0,a.kt)("p",null,"sets the columns of the filtered rows to the given values"),(0,a.kt)("h4",{id:"where-user_relationship_bool_exp"},(0,a.kt)("a",{parentName:"h4",href:"#"},(0,a.kt)("inlineCode",{parentName:"a"},"where"))," (",(0,a.kt)("a",{parentName:"h4",href:"../inputs/user-relationship-bool-exp"},(0,a.kt)("inlineCode",{parentName:"a"},"user_relationship_bool_exp!")),")"),(0,a.kt)("p",null,"filter the rows which have to be updated"),(0,a.kt)("h3",{id:"type"},"Type"),(0,a.kt)("h4",{id:"user_relationship_mutation_response"},(0,a.kt)("a",{parentName:"h4",href:"../objects/user-relationship-mutation-response"},(0,a.kt)("inlineCode",{parentName:"a"},"user_relationship_mutation_response"))),(0,a.kt)("p",null,'response of any mutation on the table "user_relationship"'))}c.isMDXComponent=!0}}]);