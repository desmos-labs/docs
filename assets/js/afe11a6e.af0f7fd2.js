"use strict";(self.webpackChunkdesmos_docs=self.webpackChunkdesmos_docs||[]).push([[28916],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var u=r(67294);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(e);t&&(u=u.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,u)}return r}function n(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,u,s=function(e,t){if(null==e)return{};var r,u,s={},a=Object.keys(e);for(u=0;u<a.length;u++)r=a[u],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(u=0;u<a.length;u++)r=a[u],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var o=u.createContext({}),i=function(e){var t=u.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):n(n({},t),e)),r},c=function(e){var t=i(e.components);return u.createElement(o.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return u.createElement(u.Fragment,{},t)}},_=u.forwardRef((function(e,t){var r=e.components,s=e.mdxType,a=e.originalType,o=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),_=i(r),d=s,b=_["".concat(o,".").concat(d)]||_[d]||l[d]||a;return r?u.createElement(b,n(n({ref:t},c),{},{components:r})):u.createElement(b,n({ref:t},c))}));function d(e,t){var r=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=r.length,n=new Array(a);n[0]=_;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:s,n[1]=p;for(var i=2;i<a;i++)n[i]=r[i];return u.createElement.apply(null,n)}return u.createElement.apply(null,r)}_.displayName="MDXCreateElement"},3195:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>n,default:()=>l,frontMatter:()=>a,metadata:()=>p,toc:()=>i});var u=r(87462),s=(r(67294),r(3905));const a={id:"update-subspace-user-group",title:"update_subspace_user_group",hide_table_of_contents:!1},n=void 0,p={unversionedId:"graphql/mutations/update-subspace-user-group",id:"graphql/mutations/update-subspace-user-group",title:"update_subspace_user_group",description:'update data of the table: "subspaceusergroup"',source:"@site/docs/07-graphql/mutations/update-subspace-user-group.mdx",sourceDirName:"07-graphql/mutations",slug:"/graphql/mutations/update-subspace-user-group",permalink:"/next/graphql/mutations/update-subspace-user-group",draft:!1,editUrl:"https://github.com/desmos-labs/docs/master/docs/07-graphql/mutations/update-subspace-user-group.mdx",tags:[],version:"current",lastUpdatedAt:1662474845,formattedLastUpdatedAt:"Sep 6, 2022",frontMatter:{id:"update-subspace-user-group",title:"update_subspace_user_group",hide_table_of_contents:!1},sidebar:"docs",previous:{title:"update_subspace_user_group_member",permalink:"/next/graphql/mutations/update-subspace-user-group-member"},next:{title:"update_subspace_user_permission_by_pk",permalink:"/next/graphql/mutations/update-subspace-user-permission-by-pk"}},o={},i=[{value:"Arguments",id:"arguments",level:3},{value:"<code>_inc</code> (<code>subspace_user_group_inc_input</code>)",id:"_inc-subspace_user_group_inc_input",level:4},{value:"<code>_set</code> (<code>subspace_user_group_set_input</code>)",id:"_set-subspace_user_group_set_input",level:4},{value:"<code>where</code> (<code>subspace_user_group_bool_exp!</code>)",id:"where-subspace_user_group_bool_exp",level:4},{value:"Type",id:"type",level:3},{value:"<code>subspace_user_group_mutation_response</code>",id:"subspace_user_group_mutation_response",level:4}],c={toc:i};function l(e){let{components:t,...r}=e;return(0,s.kt)("wrapper",(0,u.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,'update data of the table: "subspace_user_group"'),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-graphql"},"update_subspace_user_group(\n  _inc: subspace_user_group_inc_input\n  _set: subspace_user_group_set_input\n  where: subspace_user_group_bool_exp!\n): subspace_user_group_mutation_response\n")),(0,s.kt)("h3",{id:"arguments"},"Arguments"),(0,s.kt)("h4",{id:"_inc-subspace_user_group_inc_input"},(0,s.kt)("a",{parentName:"h4",href:"#"},(0,s.kt)("inlineCode",{parentName:"a"},"_inc"))," (",(0,s.kt)("a",{parentName:"h4",href:"../inputs/subspace-user-group-inc-input"},(0,s.kt)("inlineCode",{parentName:"a"},"subspace_user_group_inc_input")),")"),(0,s.kt)("p",null,"increments the numeric columns with given value of the filtered values"),(0,s.kt)("h4",{id:"_set-subspace_user_group_set_input"},(0,s.kt)("a",{parentName:"h4",href:"#"},(0,s.kt)("inlineCode",{parentName:"a"},"_set"))," (",(0,s.kt)("a",{parentName:"h4",href:"../inputs/subspace-user-group-set-input"},(0,s.kt)("inlineCode",{parentName:"a"},"subspace_user_group_set_input")),")"),(0,s.kt)("p",null,"sets the columns of the filtered rows to the given values"),(0,s.kt)("h4",{id:"where-subspace_user_group_bool_exp"},(0,s.kt)("a",{parentName:"h4",href:"#"},(0,s.kt)("inlineCode",{parentName:"a"},"where"))," (",(0,s.kt)("a",{parentName:"h4",href:"../inputs/subspace-user-group-bool-exp"},(0,s.kt)("inlineCode",{parentName:"a"},"subspace_user_group_bool_exp!")),")"),(0,s.kt)("p",null,"filter the rows which have to be updated"),(0,s.kt)("h3",{id:"type"},"Type"),(0,s.kt)("h4",{id:"subspace_user_group_mutation_response"},(0,s.kt)("a",{parentName:"h4",href:"../objects/subspace-user-group-mutation-response"},(0,s.kt)("inlineCode",{parentName:"a"},"subspace_user_group_mutation_response"))),(0,s.kt)("p",null,'response of any mutation on the table "subspace_user_group"'))}l.isMDXComponent=!0}}]);