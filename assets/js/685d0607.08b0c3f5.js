"use strict";(self.webpackChunkdesmos_docs=self.webpackChunkdesmos_docs||[]).push([[81219],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>u});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=a.createContext({}),d=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=d(e.components);return a.createElement(i.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=d(n),u=o,k=c["".concat(i,".").concat(u)]||c[u]||m[u]||r;return n?a.createElement(k,l(l({ref:t},p),{},{components:n})):a.createElement(k,l({ref:t},p))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,l=new Array(r);l[0]=c;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:o,l[1]=s;for(var d=2;d<r;d++)l[d]=n[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},1533:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var a=n(87462),o=(n(67294),n(3905));const r={id:"create-local",title:"Create a local testnet",sidebar_position:2},l="Create a local testnet",s={unversionedId:"testnets/create-local",id:"version-2.3/testnets/create-local",title:"Create a local testnet",description:"You need to install desmos before going further.",source:"@site/versioned_docs/version-2.3/05-testnets/02-create-local.md",sourceDirName:"05-testnets",slug:"/testnets/create-local",permalink:"/2.3/testnets/create-local",draft:!1,editUrl:"https://github.com/desmos-labs/docs/master/versioned_docs/version-2.3/05-testnets/02-create-local.md",tags:[],version:"2.3",lastUpdatedAt:1662484466,formattedLastUpdatedAt:"Sep 6, 2022",sidebarPosition:2,frontMatter:{id:"create-local",title:"Create a local testnet",sidebar_position:2},sidebar:"version-2.3/docs",previous:{title:"Overview",permalink:"/2.3/testnets/overview"},next:{title:"Setup",permalink:"/2.3/testnets/join-public/setup"}},i={},d=[{value:"Creating a single node testnet",id:"creating-a-single-node-testnet",level:2},{value:"Creating a multi node testnet",id:"creating-a-multi-node-testnet",level:2},{value:"Configuration",id:"configuration",level:4},{value:"Logging",id:"logging",level:4},{value:"Keys &amp; Accounts",id:"keys--accounts",level:4}],p={toc:d};function m(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"create-a-local-testnet"},"Create a local testnet"),(0,o.kt)("admonition",{title:"Required Desmos executables  ",type:"warning"},(0,o.kt)("p",{parentName:"admonition"},"You need to ",(0,o.kt)("a",{parentName:"p",href:"/2.3/install"},"install ",(0,o.kt)("inlineCode",{parentName:"a"},"desmos"))," before going further.  ")),(0,o.kt)("p",null,"There are two types of local testnets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"#creating-a-single-node-testnet"},"Single node testnet"),", which allows you to have a faster testnet with only one validator running on your machine. ")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"#creating-a-multi-node-testnet"},"Multi-node testnet"),", which requires you to have ",(0,o.kt)("a",{parentName:"p",href:"https://docker.io"},"Docker")," installed to run 4 validator nodes locally on your machine. "))),(0,o.kt)("h2",{id:"creating-a-single-node-testnet"},"Creating a single node testnet"),(0,o.kt)("p",null,"To create a single node local testnet, run the following commands:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Create a local key. Replace ",(0,o.kt)("inlineCode",{parentName:"p"},"<your-key-name>")," with whatever name you prefer."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"desmos keys add <your-key-name>\n")),(0,o.kt)("p",{parentName:"li"},"You will be required to input a password. Please make sure you use one that you will remember later. You should now\nsee an output like"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'$ desmos keys add jack --dry-run\n\n- name: jack\n  type: local\n  address: desmos1qdv08q76fmfwwzrxcqs78z6pzfxe88cgc5a3tk\n  pubkey: desmospub1addwnpepq2j9a35spphh6q529y2thg8tjw9l2c32hck98fnmu99sxpw9a9aegugm6xs\n  mnemonic: ""\n  threshold: 0\n  pubkeys: []\n\n\n**Important** write this mnemonic phrase in a safe place.\nIt is the only way to recover your account if you ever forget your password.\n\nglory discover erosion mention grow prosper supreme term nephew venue pear eternal budget rely outdoor lobster strong sign space make soccer medal tuition patrol\n')),(0,o.kt)("p",{parentName:"li"},"Make sure you save the shown mnemonic phrase in some safe place as it might return useful in the future. ")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Initialize the testnet"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"desmos init testnet --chain-id testnet\ndesmos add-genesis-account <your-key-name> 100000000000desmos\ndesmos gentx --amount 1000000000desmos --name <your-key-name>\ndesmos collect-gentxs\n")),(0,o.kt)("p",{parentName:"li"},"During the procedure you will be asked to input the same key password you have set inside point 1. ")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Start the testnet.",(0,o.kt)("br",{parentName:"p"}),"\n","Once you have completed all the steps, you are ready to start your local testnet by running: "),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"desmos start\n")))),(0,o.kt)("h2",{id:"creating-a-multi-node-testnet"},"Creating a multi node testnet"),(0,o.kt)("p",null,"To create a local multi node testnet, you can simply run the following command: "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"make localnet-start\n")),(0,o.kt)("p",null,"This command creates a 4-node network using the ",(0,o.kt)("inlineCode",{parentName:"p"},"desmoslabs/desmosnode")," image. The ports for each node are found in this\ntable:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Node ID"),(0,o.kt)("th",{parentName:"tr",align:null},"P2P Port"),(0,o.kt)("th",{parentName:"tr",align:null},"RPC Port"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"desmosnode0")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"26656")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"26657"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"desmosnode1")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"26659")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"26660"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"desmosnode2")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"26661")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"26662"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"desmosnode3")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"26663")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"26664"))))),(0,o.kt)("p",null,"To update the binary, just rebuild it and restart the nodes:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"make build-linux localnet-start\n")),(0,o.kt)("h4",{id:"configuration"},"Configuration"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"make localnet-start")," creates files for a 4-node testnet in ",(0,o.kt)("inlineCode",{parentName:"p"},"./build")," by calling the ",(0,o.kt)("inlineCode",{parentName:"p"},"desmos testnet")," command. This\noutputs a handful of files in the\n",(0,o.kt)("inlineCode",{parentName:"p"},"./build")," directory:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ tree -L 2 build/\nbuild/\n\u251c\u2500\u2500 desmos\n\u251c\u2500\u2500 gentxs\n\u2502   \u251c\u2500\u2500 node0.json\n\u2502   \u251c\u2500\u2500 node1.json\n\u2502   \u251c\u2500\u2500 node2.json\n\u2502   \u2514\u2500\u2500 node3.json\n\u251c\u2500\u2500 node0\n\u2502   \u251c\u2500\u2500 desmos\n\u2502   \u2502   \u251c\u2500\u2500 key_seed.json\n\u2502   \u2502   \u2514\u2500\u2500 keys\n\u2502   \u2514\u2500\u2500 desmos\n\u2502       \u251c\u2500\u2500 ${LOG:-desmos.log}\n\u2502       \u251c\u2500\u2500 config\n\u2502       \u2514\u2500\u2500 data\n\u251c\u2500\u2500 node1\n\u2502   \u251c\u2500\u2500 desmos\n\u2502   \u2502   \u2514\u2500\u2500 key_seed.json\n\u2502   \u2514\u2500\u2500 desmos\n\u2502       \u251c\u2500\u2500 ${LOG:-desmos.log}\n\u2502       \u251c\u2500\u2500 config\n\u2502       \u2514\u2500\u2500 data\n\u251c\u2500\u2500 node2\n\u2502   \u251c\u2500\u2500 desmos\n\u2502   \u2502   \u2514\u2500\u2500 key_seed.json\n\u2502   \u2514\u2500\u2500 desmos\n\u2502       \u251c\u2500\u2500 ${LOG:-desmos.log}\n\u2502       \u251c\u2500\u2500 config\n\u2502       \u2514\u2500\u2500 data\n\u2514\u2500\u2500 node3\n    \u251c\u2500\u2500 desmos\n    \u2502   \u2514\u2500\u2500 key_seed.json\n    \u2514\u2500\u2500 desmos\n        \u251c\u2500\u2500 ${LOG:-desmos.log}\n        \u251c\u2500\u2500 config\n        \u2514\u2500\u2500 data\n")),(0,o.kt)("p",null,"Each ",(0,o.kt)("inlineCode",{parentName:"p"},"./build/nodeN")," directory is mounted to the ",(0,o.kt)("inlineCode",{parentName:"p"},"/desmos")," directory in each container."),(0,o.kt)("h4",{id:"logging"},"Logging"),(0,o.kt)("p",null,"Logs are saved under each ",(0,o.kt)("inlineCode",{parentName:"p"},"./build/nodeN/desmos/desmos.log"),". You can also watch logs directly via Docker, for example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"docker logs -f desmosnode0\n")),(0,o.kt)("h4",{id:"keys--accounts"},"Keys & Accounts"),(0,o.kt)("p",null,"To interact with ",(0,o.kt)("inlineCode",{parentName:"p"},"desmos")," and start querying state or creating txs, you use the\n",(0,o.kt)("inlineCode",{parentName:"p"},"desmos")," directory of any given node as your ",(0,o.kt)("inlineCode",{parentName:"p"},"home"),", for example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"desmos keys list --home ./build/node0/desmos\n")),(0,o.kt)("p",null,"Now that accounts exists, you may create new accounts and send those accounts funds!"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Note"),": Each node's seed is located at ",(0,o.kt)("inlineCode",{parentName:"p"},"./build/nodeN/desmos/key_seed.json")," and can be restored to the CLI using\nthe ",(0,o.kt)("inlineCode",{parentName:"p"},"desmos keys add --restore")," command"))}m.isMDXComponent=!0}}]);