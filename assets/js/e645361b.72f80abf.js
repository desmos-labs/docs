"use strict";(self.webpackChunkdesmos_docs=self.webpackChunkdesmos_docs||[]).push([[95828],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>b});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,s=e.originalType,l=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),u=c(r),b=o,k=u["".concat(l,".").concat(b)]||u[b]||d[b]||s;return r?n.createElement(k,i(i({ref:t},p),{},{components:r})):n.createElement(k,i({ref:t},p))}));function b(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=r.length,i=new Array(s);i[0]=u;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:o,i[1]=a;for(var c=2;c<s;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},30847:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var n=r(87462),o=(r(67294),r(3905));const s={id:"user-block",title:"User block",sidebar_label:"User block",slug:"user-block"},i="User Block",a={unversionedId:"developers/types/relationships/user-block",id:"version-3/developers/types/relationships/user-block",title:"User block",description:"Inside Desmos, a UserBlock identifies the fact that a user blocked another one.",source:"@site/versioned_docs/version-3/02-developers/02-types/relationships/user-block.md",sourceDirName:"02-developers/02-types/relationships",slug:"/developers/types/relationships/user-block",permalink:"/3/developers/types/relationships/user-block",draft:!1,editUrl:"https://github.com/desmos-labs/docs/master/versioned_docs/version-3/02-developers/02-types/relationships/user-block.md",tags:[],version:"3",lastUpdatedAt:1660121663,formattedLastUpdatedAt:"Aug 10, 2022",frontMatter:{id:"user-block",title:"User block",sidebar_label:"User block",slug:"user-block"},sidebar:"version-3/docs",previous:{title:"Relationship",permalink:"/3/developers/types/relationships/relationship"},next:{title:"Subspace",permalink:"/3/developers/types/subspaces/subspace"}},l={},c=[{value:"Attributes",id:"attributes",level:2},{value:"<code>Blocker</code> (<code>string</code>)",id:"blocker-string",level:3},{value:"<code>Blocked</code> (<code>string</code>)",id:"blocked-string",level:3},{value:"<code>Reason</code> (<code>string</code>)",id:"reason-string",level:3},{value:"<code>SubspaceID</code> (<code>uint64</code>)",id:"subspaceid-uint64",level:3}],p={toc:c};function d(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"user-block"},"User Block"),(0,o.kt)("p",null,"Inside Desmos, a ",(0,o.kt)("inlineCode",{parentName:"p"},"UserBlock")," identifies the fact that a user blocked another one."),(0,o.kt)("h2",{id:"attributes"},"Attributes"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"UserBlock")," contains data that allows users to create the most complete report they need."),(0,o.kt)("h3",{id:"blocker-string"},(0,o.kt)("inlineCode",{parentName:"h3"},"Blocker")," (",(0,o.kt)("inlineCode",{parentName:"h3"},"string"),")"),(0,o.kt)("p",null,"The address of the user blocking another one."),(0,o.kt)("h3",{id:"blocked-string"},(0,o.kt)("inlineCode",{parentName:"h3"},"Blocked")," (",(0,o.kt)("inlineCode",{parentName:"h3"},"string"),")"),(0,o.kt)("p",null,"The address of the blocked user."),(0,o.kt)("h3",{id:"reason-string"},(0,o.kt)("inlineCode",{parentName:"h3"},"Reason")," (",(0,o.kt)("inlineCode",{parentName:"h3"},"string"),")"),(0,o.kt)("p",null,"The reason why the user has been blocked for."),(0,o.kt)("h3",{id:"subspaceid-uint64"},(0,o.kt)("inlineCode",{parentName:"h3"},"SubspaceID")," (",(0,o.kt)("inlineCode",{parentName:"h3"},"uint64"),")"),(0,o.kt)("p",null,"Id of the subspace inside which the user has been blocked.  "),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"If set to ",(0,o.kt)("inlineCode",{parentName:"p"},"0"),", the ",(0,o.kt)("inlineCode",{parentName:"p"},"Blocker")," will block the ",(0,o.kt)("inlineCode",{parentName:"p"},"Blocked"),' user inside the generic "Desmos" subspace. This is useful when a user wants to block any future DTag transfer request from a bad user.',(0,o.kt)("br",{parentName:"p"}),"\n","Blocking someone for the ",(0,o.kt)("inlineCode",{parentName:"p"},"0")," subspace ",(0,o.kt)("strong",{parentName:"p"},"will not")," block it on other subspaces, so other interactions might still be performed there.")))}d.isMDXComponent=!0}}]);