"use strict";(self.webpackChunkdesmos_docs=self.webpackChunkdesmos_docs||[]).push([[99636],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>f});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),i=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},l=function(e){var t=i(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=i(r),f=o,_=d["".concat(c,".").concat(f)]||d[f]||u[f]||a;return r?n.createElement(_,p(p({ref:t},l),{},{components:r})):n.createElement(_,p({ref:t},l))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,p=new Array(a);p[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,p[1]=s;for(var i=2;i<a;i++)p[i]=r[i];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},21574:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>p,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>i});var n=r(87462),o=(r(67294),r(3905));const a={id:"update-post-reference",title:"update_post_reference",hide_table_of_contents:!1},p=void 0,s={unversionedId:"graphql/mutations/update-post-reference",id:"graphql/mutations/update-post-reference",title:"update_post_reference",description:'update data of the table: "post_reference"',source:"@site/docs/07-graphql/mutations/update-post-reference.mdx",sourceDirName:"07-graphql/mutations",slug:"/graphql/mutations/update-post-reference",permalink:"/next/graphql/mutations/update-post-reference",draft:!1,editUrl:"https://github.com/desmos-labs/docs/master/docs/07-graphql/mutations/update-post-reference.mdx",tags:[],version:"current",lastUpdatedAt:1662484466,formattedLastUpdatedAt:"Sep 6, 2022",frontMatter:{id:"update-post-reference",title:"update_post_reference",hide_table_of_contents:!1},sidebar:"docs",previous:{title:"update_post_reference_by_pk",permalink:"/next/graphql/mutations/update-post-reference-by-pk"},next:{title:"update_post_tag_by_pk",permalink:"/next/graphql/mutations/update-post-tag-by-pk"}},c={},i=[{value:"Arguments",id:"arguments",level:3},{value:"<code>_inc</code> (<code>post_reference_inc_input</code>)",id:"_inc-post_reference_inc_input",level:4},{value:"<code>_set</code> (<code>post_reference_set_input</code>)",id:"_set-post_reference_set_input",level:4},{value:"<code>where</code> (<code>post_reference_bool_exp!</code>)",id:"where-post_reference_bool_exp",level:4},{value:"Type",id:"type",level:3},{value:"<code>post_reference_mutation_response</code>",id:"post_reference_mutation_response",level:4}],l={toc:i};function u(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,'update data of the table: "post_reference"'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},"update_post_reference(\n  _inc: post_reference_inc_input\n  _set: post_reference_set_input\n  where: post_reference_bool_exp!\n): post_reference_mutation_response\n")),(0,o.kt)("h3",{id:"arguments"},"Arguments"),(0,o.kt)("h4",{id:"_inc-post_reference_inc_input"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("inlineCode",{parentName:"a"},"_inc"))," (",(0,o.kt)("a",{parentName:"h4",href:"../inputs/post-reference-inc-input"},(0,o.kt)("inlineCode",{parentName:"a"},"post_reference_inc_input")),")"),(0,o.kt)("p",null,"increments the numeric columns with given value of the filtered values"),(0,o.kt)("h4",{id:"_set-post_reference_set_input"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("inlineCode",{parentName:"a"},"_set"))," (",(0,o.kt)("a",{parentName:"h4",href:"../inputs/post-reference-set-input"},(0,o.kt)("inlineCode",{parentName:"a"},"post_reference_set_input")),")"),(0,o.kt)("p",null,"sets the columns of the filtered rows to the given values"),(0,o.kt)("h4",{id:"where-post_reference_bool_exp"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("inlineCode",{parentName:"a"},"where"))," (",(0,o.kt)("a",{parentName:"h4",href:"../inputs/post-reference-bool-exp"},(0,o.kt)("inlineCode",{parentName:"a"},"post_reference_bool_exp!")),")"),(0,o.kt)("p",null,"filter the rows which have to be updated"),(0,o.kt)("h3",{id:"type"},"Type"),(0,o.kt)("h4",{id:"post_reference_mutation_response"},(0,o.kt)("a",{parentName:"h4",href:"../objects/post-reference-mutation-response"},(0,o.kt)("inlineCode",{parentName:"a"},"post_reference_mutation_response"))),(0,o.kt)("p",null,'response of any mutation on the table "post_reference"'))}u.isMDXComponent=!0}}]);